import json
import os
import logging
from telegram import Bot, Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Dispatcher, CommandHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("8053491578:AAGSIrd3qdvzGh-ZU4SmTJjsKOMHmcKNr3c")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dispatcher = Dispatcher(bot, None, workers=0)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
def start(update: Update, context):
    logger.info("–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start")
    chat_id = update.message.chat_id

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_message = (
        "üéµ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Music App!* üéµ\n\n"
        "–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫—Ä—É—Ç—ã–µ –±–∏—Ç—ã –∏ –º–µ–ª–æ–¥–∏–∏ –ø—Ä—è–º–æ –≤ Telegram! –í–æ—Ç –∫–∞–∫ –Ω–∞—á–∞—Ç—å:\n\n"
        "1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n"
        "2. –í—ã–±–µ—Ä–∏—Ç–µ –º–µ–ª–æ–¥–∏—é —Å –ø–æ–º–æ—â—å—é –≤–µ—Ä—Ö–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫.\n"
        "3. –î–æ–±–∞–≤–ª—è–π—Ç–µ –∑–≤—É–∫–∏ (Kick, Melody –∏ –¥—Ä—É–≥–∏–µ) –Ω–∞ –¥–æ—Ä–æ–∂–∫—É, –Ω–∞–∂–∏–º–∞—è –Ω–∞ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏.\n"
        "4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∏–∂–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∑–∞–ø–∏—Å–∏, –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è, –ø–∞—É–∑—ã –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.\n"
        "5. –ó–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π —Ç—Ä–µ–∫ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –≤ —á–∞—Ç!\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç–≤–æ—Ä–∏—Ç—å! üëá"
    )

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App
    keyboard = [
        [InlineKeyboardButton("üéß –û—Ç–∫—Ä—ã—Ç—å Music App", url="https://t.me/testsupertestpupertest_bot/creatmy")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(
        chat_id=chat_id,
        text=welcome_message,
        parse_mode="Markdown",
        reply_markup=reply_markup
    )
    logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id}")

# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
dispatcher.add_handler(CommandHandler("start", start))

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è Netlify
def handler(event, context):
    try:
        logger.info("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ—Ç Telegram")
        logger.info(f"Event: {event}")

        # –ü–∞—Ä—Å–∏–º –≤—Ö–æ–¥—è—â–∏–π –∑–∞–ø—Ä–æ—Å
        body = event.get("body")
        if not body:
            logger.error("Body –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∑–∞–ø—Ä–æ—Å–µ")
            return {
                "statusCode": 400,
                "body": json.dumps({"error": "No body provided"})
            }

        update = Update.de_json(json.loads(body), bot)
        if not update:
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å update")
            return {
                "statusCode": 400,
                "body": json.dumps({"error": "Invalid update"})
            }

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        dispatcher.process_update(update)

        return {
            "statusCode": 200,
            "body": json.dumps({"status": "Update processed"})
        }

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}")
        return {
            "statusCode": 500,
            "body": json.dumps({"error": str(e)})
        }